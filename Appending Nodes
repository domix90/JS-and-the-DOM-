Appending a node is done with "node.appendChild(childElement)" method. - NOTICE THERE ARE NO ' ' marks for passing the CHILD ELEMENT. 
IF you use the ' ' the code will not work. 
Node has to be a partent to the child element. 

---------------------------------------------------
EXAMPLE
---------------------------------------------------

const toggleList = document.getElementById('toggleList');
const listDiv = document.querySelector('.list');
const descriptionInput = document.querySelector('input.description');
const descriptionP = document.querySelector('p.description');
const descriptionButton = document.querySelector('button.description');
const addItemInput = document.querySelector('input.addItemInput');
const addItemButton = document.querySelector('button.addItemButton');

toggleList.addEventListener('click', () => {
  if (listDiv.style.display == 'none') {
    toggleList.textContent = 'Hide list';
    listDiv.style.display = 'block';
  } else {
    toggleList.textContent = 'Show list';                        
    listDiv.style.display = 'none';
  }                         
});

descriptionButton.addEventListener('click', () => {
  descriptionP.innerHTML = descriptionInput.value + ':';
});

addItemButton.addEventListener('click', () => {
  let li = document.createElement('li');
  let ul = document.getElementsByTagName('ul')[0];
  li.textContent = addItemInput.value;
  ul.appendChild(li);
  
});
  
  
After doing the above script there is one problem with the text in the input field. It doesn't get cleared automatically. 

What we can use is the .value method within the function so that the value is set to empty string ''. 

We can do it in the following way: 

addItemButton.addEventListener('click', () => {
  let li = document.createElement('li');
  let ul = document.getElementsByTagName('ul')[0];
  li.textContent = addItemInput.value;
  ul.appendChild(li);
  addItemInput.value = '';


In order to remove an element I can use Node.removeChild() 

I also learned that I can access the last item of a particular HTML element by using sudo class, 
for instance, to access the last element of the LI on the page I can use element.querySelector('li:last-child');
